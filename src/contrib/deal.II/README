deal.II 8.1.1 has been modified by OpenFCST developers.

###############
Modification #1
###############

Added  virtual function overloading for compute_derived_quantities_vector() in the DataPostprocessor class:


 /**
   * @author Philip Wardlaw, ESDL
   * 
   * compute_derived_quantities_vector() with extra argument to specify material id of cell
   * 
   * Virtual wrapper implemented to call previous overloading of compute_derived_quantities_vector()
   * without material id.
   * 
   * Implemented so that DataPostprocessor derivatives in fcst can recieve material ids from
   * data_out postprocessing loop in DataOut<dim,DH>::build_one_patch()
   * 
   */
  virtual
  void
  compute_derived_quantities_vector (const std::vector<Vector<double> >              &uh,
                                     const std::vector<std::vector<Tensor<1,dim> > > &duh,
                                     const std::vector<std::vector<Tensor<2,dim> > > &dduh,
                                     const std::vector<Point<dim> >                  &normals,
                                     const std::vector<Point<dim> >                  &evaluation_points,
                                     const types::material_id &mat_id,
                                     std::vector<Vector<double> >                    &computed_quantities ) const; 




###############
Modification #2
###############

Modified data_out.cc at line 195 in 

postprocessor->compute_derived_quantities_vector(data.patch_values_system,
                                                    data.patch_gradients_system,
                                                    data.patch_hessians_system,
                                                    dummy_normals,
                                                    data.patch_evaluation_points,
                                                    cell_and_index->first->material_id(), //Modified by Philip Wardlaw, ESDL
                                                    data.postprocessed_values[dataset] ); 



In order to maintain backwards compatibility of classes derived from DataPostprocessor which don't implement the new function overloading
with material_id we implemented the virtual wrapping function in the DataPostprocessor class:


###############
Modification #3
###############

template <int dim>
void
DataPostprocessor<dim>::
compute_derived_quantities_vector (const std::vector<Vector<double> >              &uh,
                                     const std::vector<std::vector<Tensor<1,dim> > > &duh,
                                     const std::vector<std::vector<Tensor<2,dim> > > &dduh,
                                     const std::vector<Point<dim> >                  &normals,
                                     const std::vector<Point<dim> >                  &evaluation_points,
                                      const types::material_id &/*mat_id*/,
                                     std::vector<Vector<double> >                    &computed_quantities  ) const
{
  compute_derived_quantities_vector(uh, duh, dduh, normals, evaluation_points, computed_quantities);
}


###############
Modification #4
###############

If you wish to use your own installation for deal.II then a flag needs to be changed that OpenFCST uses else you will receive issue when linking to Dakota. 
deal.II typically wants to compile with the -Wl,--as-needed LDFLAG, this creates problems when linking to Dakota. So if you require Dakota
and wish to build your own deal.II then either:
      
a) Before installing deal.II in the deal.II src folder replace the following lines in certain files:
        
      i) File: deal.II_src_folder/cmake/setup_compiler_flags_gnu.cmake
         Replace Line 56: ENABLE_IF_LINKS(DEAL_II_LINKER_FLAGS "-Wl,--as-needed")
         With: ENABLE_IF_LINKS(DEAL_II_LINKER_FLAGS "")

      ii) File: deal.II_src_folder/cmake/setup_compiler_flags_intel.cmake
          Replace Line 47: ENABLE_IF_LINKS(DEAL_II_LINKER_FLAGS "-Wl,--as-needed")
          With: ENABLE_IF_LINKS(DEAL_II_LINKER_FLAGS "")
                  
b) If you have already installed deal.II and don't wish to recompile it with the above changes then you can go into your deal.II install folder
    and make the following change:
      
      File: deal.II_Install_folder/lib/cmake/deal.II/deal.IIConfig.cmake
      Replace Line 121: SET(DEAL_II_LINKER_FLAGS "-Wl,--as-needed -rdynamic  -Wl,--export-dynamic")
      With: SET(DEAL_II_LINKER_FLAGS "-rdynamic  -Wl,--export-dynamic")








